---
- summary: |
    Проверка успешной регистрации нового пользователя
  requirement: |
    При вводе валидной почты, никнейма и пароля пользователь должен зарегистрироваться в системе
  prerequisites: |
    Нет
  test-data: |
    - Nickname = testuser
    - Любой валидный email, которого ещё нет в системе
    - password = admin123.
  steps:
    - Нажать на кнопку Sign Up
    - Ввести "testuser" в поле Nickname
    - Ввести любой валидный email в поле Email
    - Ввести "admin123." в поле Password
    - Повторно ввести "admin123." в поле Password confirmation
    - Нажать кнопку Submit
  expected-result: |
    - Пользователь перенаправлен на главную страницу сайта 
    - В правом верхнем углу пользователь видит свой ник

- summary: |
    Проверка неуспешной регистрации с некорректным email
  requirement: |
    При вводе некорректной почты пользователь не должен зарегистрироваться
  prerequisites:
    Нет
  test-data: |
    - Nickname = testuser3 
    - email = testuser@example 
    - password = admin123.
  steps:
    - Открыть страницу регистрации
    - Ввести "testuser3" в поле Nickname
    - Ввести "testuser@example" в поле Email
    - Ввести "admin123." в поле Password
    - Повторно ввести "admin123." в поле Password confirmation
    - Нажать кнопку Submit
  expected-result: |
    - Регистрация не проходит
    - Появляется сообщение "Invalid email"

- summary: |
    Проверка успешного входа через OAuth-интеграцию с Github
  requirement: |
    Пользователь с аккаунтом GitHub должен иметь возможность войти в систему через OAuth без ввода логина и пароля на Codebattle
  prerequisites:
    GitHub-аккаунт пользователя существует и не привязан к другому профилю Codebattle
  test-data: |
    Нет
  steps:
    - Перейти на страницу входа
    - Нажать на кнопку "Sign in with Github"
    - Убедиться, что происходит перенаправление на страницу авторизации GitHub
    - Ввести валидный логин и пароль от Github
    - Подтвердить разрешения для Codebattle
  expected-result: |
    - Пользователь успешно авторизован в Codebattle
    - Происходит перенаправление на главную страницу
    - В правом верхнем углу пользователь видит свой ник из GitHub
    - В профиле пользователя отображается привязанный GitHub-аккаунт

- summary: |
    Проверка успешного входа через OAuth-интеграцию с Discord
  requirement: |
    Пользователь с аккаунтом Discord должен иметь возможность войти в систему через OAuth без ввода логина и пароля на Codebattle
  prerequisites:
    Discord-аккаунт пользователя существует и не привязан к другому профилю Codebattle
  test-data: |
    Нет
  steps:
    - Перейти на страницу входа
    - Нажать на кнопку "Sign in with Discord"
    - Убедиться, что происходит перенаправление на страницу авторизации Discord
    - Ввести валидный логин и пароль от Discord
    - Подтвердить разрешения для Codebattle
  expected-result: |
    - Пользователь успешно авторизован в Codebattle
    - Происходит перенаправление на главную страницу
    - В правом верхнем углу пользователь видит свой ник из Discord
    - В профиле пользователя отображается привязанный Discord-аккаунт

- summary: |
    Проверка успешной авторизации через email и пароль
  requirement: |
    При вводе валидных данных в форме входа пользователь должен войти в свой аккаунт
  prerequisites:
    Нет
  test-data: |
    - Email = testuser@example.com
    - Password = admin123.
  steps:
    - Перейти на страницу входа
    - Ввести в поле email "testuser@example.com"
    - Ввести в поле пароль "admin123."
    - Нажать кнопку Submit
  expected-result: |
    - Пользователь авторизован 
    - Происходит редирект на главную страницу
    - В правом верхнем углу пользователь видит свой ник
    - В cookie-файлах появляется параметр sessionId

- summary: |
    Проверка неуспешной авторизации через email и пароль
  requirement: |
    При вводе невалидных данных в форме входа пользователь не должен войти в аккаунт
  prerequisites:
    Нет
  test-data: |
    - Email = testuse@example.com
    - Password = admin123
  steps:
    - Перейти на страницу входа
    - Ввести в поле email "testuse@example.com"
    - Ввести в поле пароль "admin123"
    - Нажать кнопку Submit
  expected-result: |
    - Авторизация не прошла
    - Появляется сообщение "Invalid email"

- summary: |
    Проверка успешной отправки письма с инструкциями при запросе сброса пароля для зарегистрированного email
  requirement: |
    Пользователь должен иметь возможность запросить смену пароля через email
  prerequisites:
    - Пользователь не авторизован
    - Email testuser@example.com зарегистрирован в системе
  test-data: |
    Email = testuser@example.com
  steps:
    - Перейти на страницу входа
    - Нажать на ссылку "Forgot your password?"
    - В поле Email ввести "testuser@example.com"
    - Нажать кнопку "Submit"
  expected-result: |
    Появляется сообщение "We have sent you an email with instructions on how to reset your password"

- summary: |
    Проверка письма для сброса пароля на корректную ссылку и инструкции
  requirement: |
    Письмо для сброса пароля должно содержать рабочую ссылку и четкие инструкции
  prerequisites:
    Письмо для сброса пароля отправлено на testuser@example.com
  test-data: |
    Нет
  steps:
    - Открыть почтовый ящик testuser@example.com
    - Найти письмо с темой "Reset your password for Codebattle"
    - Открыть письмо
  expected-result: |
    - Письмо содержит текст с инструкциями по сбросу пароля
    - Письмо содержит кликабельную ссылку с подписью "Follow this link to reset your Codebattle password"

- summary: |
    Проверка возможности установления нового пароля через форму восстановления
  requirement: |
    Пользователь должен иметь возможность установить новый пароль после перехода по ссылке из письма
  prerequisites:
    Пользователь перешел по ссылке из письма для сброса пароля
  test-data: |
    Новый пароль = NewSecurePass123!
  steps:
    - Перейти по ссылке из письма
    - В открывшейся форме ввести "NewSecurePass123!"
    - Нажать кнопку "Save"
  expected-result: |
    - Появилось сообщение "Password changed"

- summary: |
    Проверка успешного входа с новым паролем после сброса
  requirement: |
    После успешного сброса пароля пользователь должен авторизоваться с новым паролем
  prerequisites:
    Пароль для testuser@example.com изменен на NewSecurePass123!
  test-data: |
    Email = testuser@example.com
    Password = NewSecurePass123!
  steps:
    - Перейти на страницу входа
    - Ввести testuser@example.com в поле Email
    - Ввести NewSecurePass123! в поле Password
    - Нажать кнопку "Submit"
  expected-result: |
    - Пользователь авторизован в системе и перенаправлен на главную страницу

- summary: |
    Проверка возможности участия в игре в гостевом режиме без авторизации
  requirement: |
    Система должна предоставлять возможность участия в пробном сражении без регистрации и авторизации
  prerequisites:
    Пользователь не авторизован
  test-data: |
    Нет
  steps:
    - Нажать на кнопку "Try simple battle"
    - Дождаться загрузки игровой сессии
    - Ввести произвольный текст в поле для ввода кода
    - Нажать кнопку "Run"
  expected-result: |
    - Пользователь перенаправлен на страницу с игрой 
    - Поле для ввода кода доступно для редактирования

- summary: |
    Проверка создания кастомной игры с пользовательскими настройками
  requirement: |
    Авторизованный пользователь должен иметь возможность создать игру с указанием уровня сложности, типа игры, контроля времени, конкретной задачи, тегов
  prerequisites:
    Нет
  test-data: |
    - Level = easy
    - Game type = With a bot
    - Time control = 8 min
    - Task = pizza_volume
    - Tags = math
  steps:
    - Нажать на кнопку "Create a game"
    - Выставить фильтры в соответствии с тестовыми данными
    - Нажать кнопку "Create battle"
    - Дождаться загрузки игровой сессии
  expected-result: |
    - Происходит редирект на страницу с новой игрой 
    - Настройки игры соответствуют указанным 
    - Противником выступает бот

- summary: |
    Проверка создания игры с приглашением друга
  requirement: |
    Система должна позволять создавать игру и отправлять уведомление приглашённому пользователю
  prerequisites:
    Пользователь 2 авторизован
  test-data: |
    - Level = elementary
    - Game type = With a friend
    - Time control = 8 min
    - Task = rect_area
    - Tags = math
  steps:
    - Нажать на кнопку "Create a game"
    - Выставить фильтры в соответствии с тестовыми данными
    - Нажать кнопку "Create battle"
  expected-result: |
    - Пользователь 1 получает badge-уведомление (+1)
    - Уведомление отображает приглашение в игру

- summary: |
    Проверка принятия приглашения в игру и участие
  requirement: |
    Система должна обеспечивать совместный доступ к игровой сессии
  prerequisites:
    Пользователь 1 авторизован через GitHub
    Пользователь 2 отправил приглашение
  test-data: |
    Нет
  steps:
    - Нажать на иконку уведомлений
    - Выбрать приглашение от Пользователя 2
    - Принять приглашение
    - Дождаться загрузки игровой сессии
  expected-result: |
    - У обоих пользователей открыта одна игровая сессия (game session ID одинаковый)
    - Таймер показывает 8:00
    - Задача "rect_area"
    - Доступен чат
    - Уведомление помечается как прочитанное

- summary: |
    Проверка полного цикла успешного создания турнира и участия в нём
  requirement: |
    Система должна предоставлять возможность:
    - Создавать турниры с настройками по умолчанию
    - Присоединяться к созданному турниру
    - Запускать турнир после формирования лобби
    - Обеспечивать игровой процесс
  prerequisites:
    Нет
  test-data: |
    Настройки по умолчанию
  steps:
    - Перейти во вкладку "Tournaments"
    - Нажать на текстовую ссылку "You may want to create one"
    - В блоке "Create a new tournament"
       - Убедиться, что сгенерировано название турнира
       - Оставить настройки по умолчанию
       - Нажать кнопку "Create"
    - В лобби турнира
       - Нажать "Join" для участия
       - Дождаться возможности нажать "Start" и нажать на неё
       - Подтвердить запуск в диалоговом окне ("Confirm")
    - В окне ожидания
       - Убедиться, что таймер обратного отсчёта работает корректно
       - Нажать "Open" или дождаться автоматического старта
    - Убедиться, что загрузилась игровая сессия
  expected-result: |
    - Чат лобби доступен для сообщений
    - Таймер обратного отсчёта работает корректно
    - Открывается игровой интерфейс
    - Доступны все функциональные элементы (редактор кода, кнопка отправки решений)

- summary: |
    Проверка корректного отображения и обновления списка активных игр в лобби
  requirement: |
    Система должна отображать список всех доступных игр, обновлять информацию в реальном времени, сортировать игры по сложности (от легкой к сложной)
  prerequisites: |
    Нет
  test-data: |
    Нет
  steps:
    - Убедиться, что список активных игр отображается (вкладка "Lobby")
    - Проверить сортировку
       - Убедиться, что игры с уровнем сложности Easy отображаются выше Medium
       - Убедиться, что игры с уровнем сложности Medium отображаются выше Hard
    - Проверить обновление в реальном времени
       - Запомнить количество игр и состояние одной из них
       - Подождать 30 секунд
       - Убедиться, что список обновился (изменилось количество игр или их состояние)
  expected-result: |
    - Все активные игры видны в лобби
    - Для каждой игры отображается уровень сложности, никнеймы участников, кнопки действий (присоединиться/показать), статус (ожидание/в процессе)
    - Игры упорядочены по сложности: Easy → Medium → Hard
    - Новые игры появляются автоматически
    - Изменения статусов отображаются без перезагрузки
    - Количество участников обновляется в реальном времени

- summary: |
    Проверка функционала наблюдения за активной игровой сессией других пользователей
  requirement: |
    Система должна предоставлять возможность:
    - Просматривать активные игры других пользователей
    - Отображать игровой процесс в реальном времени
    - Обеспечивать функционал чата для наблюдателей
  prerequisites: |
    В списке активных игр есть минимум одна активная сессия
  test-data: |
    Нет
  steps:
    - Найти игру со статусом "Playing" (в разделе "Lobby")
    - Нажать кнопку "Show" в строке выбранной игры
    - Убедиться, что страница полностью загрузилась
    - Проверить элементы интерфейса
       - Во вкладке "General" нажать на поле для ввода текста
       - Ввести тестовое сообщение
       - Нажать на кнопку "Send"
  expected-result: |
    - Виден код обоих участников (read-only)
    - Отображается реальное состояние игры
    - Таймер обновляется в реальном времени
    - Видна текущая задача
    - Чат доступен для ввода сообщений

- summary: |
    Проверка возможности изменения и сохранения личной информации о пользователе
  requirement: |
    Пользователь должен иметь возможность менять и сохранять данные о себе в настройках
  prerequisites: |
    Нет
  test-data: |
    - Nickname = Lalala
    - Your weapon = Go
  steps:
    - Нажать на свою аватарку
    - Перейти в настройки через кнопку "Settings"
    - Изменить данные согласно test-data
    - Нажать кнопку "Save"
    - Перезагрузить страницу
    - Убедиться, что данные сохранены и отображаются корректно
  expected-result: |
    - Данные изменяются на указанные в test-data 
    - Данные сохраняются после перезагрузки страницы

- summary: |
    Проверка воспроизведения игры из истории в нормальном режиме
  requirement: |
    Пользователь должен иметь возможность просматривать полную историю прошедших игр
  prerequisites: |
    Нет
  test-data: |
    Нет
  steps:
    - Перейти во вкладку "History"
    - Выбрать любую игру и нажать кнопку "Show"
    - Дождаться загрузки игры
    - Нажать на кнопку "Play"
  expected-result: |
    Игра воспроизводится плавно, плеер не тормозит
